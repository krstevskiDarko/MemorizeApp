//
//  EmojiMemoryGame.swift
//  Memorize
//
//  Created by Darko Krstevski on 7.9.23.
//

import SwiftUI



class EmojiMemoryGame: ObservableObject {
    
    @Published private var model: MemoryGame<String>
    
    @Published var theme: Theme
    
    //Making variables GLOBAL (with keyword 'static') to make sure its initilized before the other propertiy initilizers in the class
    private static let emojis = ["üíª","‚åöÔ∏è","üì±","üñ•Ô∏è","‚å®Ô∏è","üíø","üïπÔ∏è","üì∑","‚è∞","üñ±Ô∏è",]
    
    private static var arrayOfThemes = [
        Theme(name: "Ice", emojis: ["üíß","‚ùÑÔ∏è","üßä","ü•∂","ü©µ","üí¶","‚õÑÔ∏è","‚õ∑Ô∏è"], pairsToShow: 8, color: "blue", randomNumCards: false),
        Theme(name: "Fire", emojis: ["‚òÑÔ∏è","üî•","‚ù§Ô∏è‚Äçüî•","ü•µ","üß®","üåã","ü§í"], pairsToShow: 7, color: "red", randomNumCards: true),
        Theme(name: "Storm", emojis: ["üå™Ô∏è","üå©Ô∏è","‚ö°Ô∏è","‚õàÔ∏è","üå´Ô∏è","üåÄ","üíú"], pairsToShow: 6, color: "purple", randomNumCards: true),
        Theme(name: "Earth", emojis: ["üå≥","üå≤","üåé","üçÉ","üçÇ","üíö"], pairsToShow: 6, color: "green", randomNumCards: true),
        Theme(name: "Light", emojis: ["üîÜ","üí°","‚ú®","üåü","üíõ"], pairsToShow: 5, color: "yellow"),
        Theme(name: "Dark", emojis: ["üåö","üëæ","üñ§","‚¨õÔ∏è","‚öîÔ∏è"], pairsToShow: 6, color: "black", randomNumCards: true),
    ]
    
    init() {
        self.theme = EmojiMemoryGame.arrayOfThemes[0]

        self.model = EmojiMemoryGame.createMemoryGame(theme: EmojiMemoryGame.arrayOfThemes[0])
       
        shuffle()
    }
    
    private static func createMemoryGame(theme: Theme) -> MemoryGame<String>{

        var cardsToShow:Int
        
        if theme.randomNumCards != nil && theme.randomNumCards == true{
            cardsToShow = Int.random(in: 2...theme.pairsToShow)
        }else{
            cardsToShow = theme.pairsToShow
        }
        let arrayOFEmojis = theme.emojis.shuffled()
        
         return MemoryGame(numberOfPairOfCards: cardsToShow) { pairIndex in
                if arrayOFEmojis.indices.contains(pairIndex){
                    return arrayOFEmojis[pairIndex]
                } else {
                    return "‚ÅâÔ∏è"
                }
            }
        }
    
    var color: Color { 
        let colors = [ "blue": Color.blue,
                       "red": Color.red,
                       "green": Color.green,
                       "purple": Color.purple,
                       "yellow": Color.yellow,
                       "black": Color.black
        ]
       
        return colors[theme.color] ?? Color.accentColor
    }
    
    
    func newGame(){
        self.theme = EmojiMemoryGame.arrayOfThemes.randomElement()!
        self.model = EmojiMemoryGame.createMemoryGame(theme: theme)
        
    }
    
    var score: Int {model.score}
    
    var cards: Array<MemoryGame<String>.Card>{
        return model.cards
    }
    
    // MARK: - Intents
    func shuffle(){
        model.shuffle()
    }
    
    func choose(_ card: MemoryGame<String>.Card){
        model.choose(card)
    }
    
}
